{"version":3,"sources":["components/Statistic/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Feadback/FeedBack.module.css","components/Message/Notification.module.css","components/Statistic/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Message/Notification.js","components/Feadback/FeedBack.js","App.js","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","percentage","className","styles","title","list","item","FeedbackOptions","onClickGood","onClickNeutral","onClickBad","btn","type","onClick","Notification","message","Message","FeetBack","state","visible","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","section","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,WAAa,+BAA+B,MAAQ,0BAA0B,KAAO,yBAAyB,KAAO,yBAAyB,WAAa,iC,gBCA7KD,EAAOC,QAAU,CAAC,IAAM,+B,iBCAxBD,EAAOC,QAAU,CAAC,QAAU,0BAA0B,MAAQ,0B,mBCA9DD,EAAOC,QAAU,CAAC,QAAU,gC,sJCebC,EAbI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,WAA9B,OACf,sBAAKC,UAAWC,IAAOP,WAAvB,UACI,oBAAIM,UAAWC,IAAOC,MAAtB,wBACA,qBAAIF,UAAWC,IAAOE,KAAtB,UACI,qBAAIH,UAAWC,IAAOG,KAAtB,kBAAkCT,KAClC,qBAAIK,UAAWC,IAAOG,KAAtB,qBAAqCR,KACrC,qBAAII,UAAWC,IAAOG,KAAtB,iBAAiCP,KACjC,qBAAIG,UAAWC,IAAOG,KAAtB,mBAAmCN,KACnC,qBAAIE,UAAWC,IAAOG,KAAtB,+BAA+CL,EAA/C,c,gBCAGM,EARS,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,eAAgBC,EAA/B,EAA+BA,WAA/B,OACpB,gCACI,wBAAQR,UAAWC,IAAOQ,IAAKC,KAAK,SAASC,QAASL,EAAtD,kBACA,wBAAQN,UAAWC,IAAOQ,IAAKC,KAAK,SAASC,QAASJ,EAAtD,qBACA,wBAAQP,UAAWC,IAAOQ,IAAKC,KAAK,SAASC,QAASH,EAAtD,qB,gBCAOI,EAJM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACjB,oBAAIb,UAAWC,IAAOa,QAAtB,SAAgCD,K,gBC8DrBE,E,4MA1DXC,MAAQ,CACJrB,KAAM,EACNC,QAAS,EACTC,IAAK,EACLoB,SAAS,G,EAGbX,YAAc,WACV,EAAKY,SAAS,CAAED,SAAS,IACzB,EAAKC,UAAS,SAAAC,GAAS,MAAK,CACxBxB,KAAMwB,EAAUxB,KAAO,O,EAG/BY,eAAiB,WACb,EAAKW,SAAS,CAAED,SAAS,IACzB,EAAKC,UAAS,SAAAC,GAAS,MAAK,CACxBvB,QAASuB,EAAUvB,QAAU,O,EAGrCY,WAAa,WACT,EAAKU,SAAS,CAAED,SAAS,IACzB,EAAKC,UAAS,SAAAC,GAAS,MAAK,CACxBtB,IAAKsB,EAAUtB,IAAM,O,EAG7BuB,mBAAqB,WAEjB,OADY,EAAKJ,MAAMrB,KAAO,EAAKqB,MAAMpB,QAAU,EAAKoB,MAAMnB,K,EAGlEwB,gCAAkC,WAE9B,OADwBC,KAAKC,MAAM,IAAM,EAAKH,qBAAuB,EAAKJ,MAAMrB,O,4CAIpF,WACI,IAAMG,EAAQ0B,KAAKJ,qBACbrB,EAAayB,KAAKH,kCACxB,OACI,sBAAKrB,UAAWC,IAAOwB,QAAvB,UACI,oBAAIzB,UAAWC,IAAOC,MAAtB,kCACA,cAAC,EAAD,CACII,YAAakB,KAAKlB,YAClBC,eAAgBiB,KAAKjB,eACrBC,WAAYgB,KAAKhB,aAGpBgB,KAAKR,MAAMC,QAAU,cAAC,EAAD,CAClBtB,KAAM6B,KAAKR,MAAMrB,KACjBC,QAAS4B,KAAKR,MAAMpB,QACpBC,IAAK2B,KAAKR,MAAMnB,IAChBC,MAAOA,EACPC,WAAYA,IACX,cAAC,EAAD,CAAcc,QAAQ,6B,GArDpBa,aCSRC,G,MAVH,WACV,OACE,mCAEE,cAAC,EAAD,QCNNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.24296017.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Statistics\":\"Statistics_Statistics__JDbxt\",\"title\":\"Statistics_title__ATvRF\",\"list\":\"Statistics_list__XJhUK\",\"item\":\"Statistics_item__ixPya\",\"stats_list\":\"Statistics_stats_list__2gPtG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOptions_btn__2-4q3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"FeedBack_section__3oaQQ\",\"title\":\"FeedBack_title__26O52\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Message\":\"Notification_Message__2HfRr\"};","import React from 'react';\r\nimport styles from './Statistics.module.css'\r\n\r\nconst Statistics = ({ good, neutral, bad, total, percentage }) => (\r\n    <div className={styles.Statistics}>\r\n        <h2 className={styles.title}>Statistics</h2>\r\n        <ul className={styles.list}>\r\n            <li className={styles.item}>Good {good}</li>\r\n            <li className={styles.item}>Neutral {neutral}</li>\r\n            <li className={styles.item}>Bad {bad}</li>\r\n            <li className={styles.item}>Total {total}</li>\r\n            <li className={styles.item}>Positive feedback {percentage}%</li>\r\n        </ul>\r\n    </div>\r\n);\r\n\r\nexport default Statistics;","import React from 'react';\r\nimport styles from './FeedbackOptions.module.css'\r\n\r\nconst FeedbackOptions = ({onClickGood, onClickNeutral, onClickBad}) => (\r\n    <div>\r\n        <button className={styles.btn} type='button' onClick={onClickGood}>Good</button>\r\n        <button className={styles.btn} type='button' onClick={onClickNeutral}>Neutral</button>\r\n        <button className={styles.btn} type='button' onClick={onClickBad}>Bad</button>\r\n    </div>\r\n);\r\n\r\nexport default FeedbackOptions;","import React from 'react';\r\nimport styles from './Notification.module.css'\r\n\r\nconst Notification = ({ message }) => (\r\n    <h2 className={styles.Message}>{message}</h2>\r\n);\r\n\r\nexport default Notification\r\n","import React, { Component } from 'react';\r\nimport Statistics from '../Statistic/Statistics';\r\nimport FeedbackOptions from '../FeedbackOptions/FeedbackOptions';\r\nimport Notification from '../Message/Notification';\r\nimport styles from './FeedBack.module.css';\r\n\r\n\r\nclass FeetBack extends Component {\r\n    state = {\r\n        good: 0,\r\n        neutral: 0,\r\n        bad: 0,\r\n        visible: false\r\n    };\r\n\r\n    onClickGood = () => {\r\n        this.setState({ visible: true })\r\n        this.setState(prevState => ({\r\n            good: prevState.good + 1\r\n        }));\r\n    };\r\n    onClickNeutral = () => {\r\n        this.setState({ visible: true })\r\n        this.setState(prevState => ({\r\n            neutral: prevState.neutral + 1\r\n        }));\r\n    };\r\n    onClickBad = () => {\r\n        this.setState({ visible: true })\r\n        this.setState(prevState => ({\r\n            bad: prevState.bad + 1\r\n        }));\r\n    };\r\n    countTotalFeedback = () => {\r\n        const sum = this.state.good + this.state.neutral + this.state.bad;\r\n        return sum;\r\n    };\r\n    countPositiveFeedbackPercentage = () => {\r\n        const feedBackProcent = Math.round(100 / this.countTotalFeedback() * this.state.good);\r\n        return feedBackProcent;\r\n    };\r\n\r\n    render() {\r\n        const total = this.countTotalFeedback();\r\n        const percentage = this.countPositiveFeedbackPercentage();\r\n        return (\r\n            <div className={styles.section}>\r\n                <h1 className={styles.title}>Pleas leave feedback</h1>\r\n                <FeedbackOptions\r\n                    onClickGood={this.onClickGood}\r\n                    onClickNeutral={this.onClickNeutral}\r\n                    onClickBad={this.onClickBad}\r\n                />\r\n\r\n                {this.state.visible ? <Statistics\r\n                    good={this.state.good}\r\n                    neutral={this.state.neutral}\r\n                    bad={this.state.bad}\r\n                    total={total}\r\n                    percentage={percentage}\r\n                /> : <Notification message=\"No feedback given\" />\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default FeetBack;","import React from 'react';\nimport FeetBack from './components/Feadback/FeedBack'\nimport './styles.css'\n\n\n\nconst App = () => {\n  return (\n    <>\n      \n      <FeetBack />\n\n    </>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}